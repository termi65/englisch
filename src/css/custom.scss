@use "../../node_modules/bootstrap/scss/bootstrap";

// Transpilieren mit: sass src/scss/custom.scss:src/components/css/custom_bootstrap.css
$primary: rgb(47, 40, 173);
$secondary: rgb(67, 67, 67);
$bg-button: rgba($primary,0.5);
// @import url(./_variables.scss);
// $prefix: bs- !default;
// $form-check-input-bg: #ffffff !default;
// $form-check-input-border: var(--#{$prefix}border-width) solid black !default;
// $form-check-radio-border-radius: 100% !default;

button {
    background-color: $bg-button;
    border-radius: 5px;
    
}

@media (max-width: 900px) {
    .tb-left {
    writing-mode: vertical-rl;
  }
}

:root {
	--mh-background-color-odd: #9ec5fe;
	--mh-background-color-even: #fff3cd;
}

.row-bg-odd {
	background-color: var(--mh-background-color-odd);
}

.row-bg-even {
	background-color: var(--mh-background-color-even);
}

.form-control2 {
	display: block;
	width: 100%;
	padding: 0.375rem 0.75rem;
	font-size: 1rem;
	font-weight: 400;
	line-height: 1.5;
	color: red;
	appearance: none;
	background-color: var(--bs-body-bg);
	background-clip: padding-box;
	border: var(--bs-border-width) solid var(--bs-border-color);
	border-radius: var(--bs-border-radius);
	transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

.input-group > .form-control2[type=number] {
	position: relative;
	flex: 1 1 auto;
	width: 1%;
	min-width: 0;
	text-align: end;
	padding: 2px;
	border-radius: 4px;
	border-color: #444;
  }
  
// Die funktionieren leider nicht. 
// Da mÃ¼sste man div anders definieren oder im Quellcode
// jedes einzublendende div einzeln festlegen. 
// Mit @for-Schleife versuchen!

// .einblenden-1 {
// 	animation-name: einblenden;
// 	animation-duration: 1.5s;
// 	animation-fill-mode: forwards;
//   animation-delay: 1.5s;
// }

// .einblenden-0 {
// 	animation-name: einblenden;
// 	animation-duration: 1.5s;
// 	animation-fill-mode:forwards;
// }

div {
  	animation-name: einblenden;
	animation-duration: 1.5s;
	animation-fill-mode:forwards;
}

@keyframes einblenden {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

$abstufungen: 9;
  @for $i from 1 through $abstufungen {
    .gray-#{$i*100} {
        color: var(--bs-gray-#{$i*100});
		
  }
}

.drehung90Grad {
	animation-name: drehung;
	animation-duration: 1s;
	animation-fill-mode: forwards;
	animation-delay: 0.5s;
}

@keyframes drehung {
     0% { transform: rotate(0deg)}
	33% { transform: rotate(90deg)}
	66% { transform: rotate(120deg)}
   100% { transform: rotate(90deg) }
}



.input-group > .form-control[type=number] {
	position: relative;
	flex: 1 1 auto;
	width: 80px;
	text-align: end;
	padding: 2px;
	border-radius: 4px;
	border-color: #444;
  }

.werte-label {
	min-width: 80px;
	background-color: var(--bs-white);
	border-width: 1px;
	border-style: solid;
	border-radius: 4px;
	border-color: #444;
}

.form-select {
    --bs-form-select-bg-img: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e");
    display: block;
    width: 100%;
    padding: 0.375rem 2.25rem 0.375rem 0.75rem;
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    color: var(--bs-body-color);
    appearance: none;
    background-color: var(--bs-body-bg);
    background-image: var(--bs-form-select-bg-img), var(--bs-form-select-bg-icon, none);
    background-repeat: no-repeat;
    background-position: right 0.75rem center;
    background-size: 16px 12px;
    border: var(--bs-border-width) solid black;
    border-radius: var(--bs-border-radius);
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  }
  